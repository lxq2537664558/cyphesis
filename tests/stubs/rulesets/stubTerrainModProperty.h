// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubTerrainModProperty_custom.h file.

#include "rulesets/TerrainModProperty.h"
#include "stubTerrainModProperty_custom.h"

#ifndef STUB_RULESETS_TERRAINMODPROPERTY_H
#define STUB_RULESETS_TERRAINMODPROPERTY_H

#ifndef STUB_TerrainModProperty_TerrainModProperty
//#define STUB_TerrainModProperty_TerrainModProperty
   TerrainModProperty::TerrainModProperty()
    : TerrainEffectorProperty()
    , m_translator(nullptr)
  {
    
  }
#endif //STUB_TerrainModProperty_TerrainModProperty

#ifndef STUB_TerrainModProperty_TerrainModProperty_DTOR
//#define STUB_TerrainModProperty_TerrainModProperty_DTOR
   TerrainModProperty::~TerrainModProperty()
  {
    
  }
#endif //STUB_TerrainModProperty_TerrainModProperty_DTOR

#ifndef STUB_TerrainModProperty_copy
//#define STUB_TerrainModProperty_copy
  TerrainModProperty* TerrainModProperty::copy() const
  {
    return nullptr;
  }
#endif //STUB_TerrainModProperty_copy

#ifndef STUB_TerrainModProperty_install
//#define STUB_TerrainModProperty_install
  void TerrainModProperty::install(LocatedEntity *, const std::string &)
  {
    
  }
#endif //STUB_TerrainModProperty_install

#ifndef STUB_TerrainModProperty_remove
//#define STUB_TerrainModProperty_remove
  void TerrainModProperty::remove(LocatedEntity *, const std::string &)
  {
    
  }
#endif //STUB_TerrainModProperty_remove

#ifndef STUB_TerrainModProperty_apply
//#define STUB_TerrainModProperty_apply
  void TerrainModProperty::apply(LocatedEntity *)
  {
    
  }
#endif //STUB_TerrainModProperty_apply

#ifndef STUB_TerrainModProperty_operation
//#define STUB_TerrainModProperty_operation
  HandlerResult TerrainModProperty::operation(LocatedEntity *, const Operation &, OpVector &)
  {
    return *static_cast<HandlerResult*>(nullptr);
  }
#endif //STUB_TerrainModProperty_operation

#ifndef STUB_TerrainModProperty_parseModData
//#define STUB_TerrainModProperty_parseModData
  Mercator::TerrainMod* TerrainModProperty::parseModData(const WFMath::Point<3>& pos, const WFMath::Quaternion& orientation) const
  {
    return nullptr;
  }
#endif //STUB_TerrainModProperty_parseModData

#ifndef STUB_TerrainModProperty_move
//#define STUB_TerrainModProperty_move
  void TerrainModProperty::move(LocatedEntity*)
  {
    
  }
#endif //STUB_TerrainModProperty_move

#ifndef STUB_TerrainModProperty_remove
//#define STUB_TerrainModProperty_remove
  void TerrainModProperty::remove(LocatedEntity*)
  {
    
  }
#endif //STUB_TerrainModProperty_remove

#ifndef STUB_TerrainModProperty_getAttr
//#define STUB_TerrainModProperty_getAttr
  int TerrainModProperty::getAttr(const std::string &, Atlas::Message::Element &)
  {
    return 0;
  }
#endif //STUB_TerrainModProperty_getAttr

#ifndef STUB_TerrainModProperty_setAttr
//#define STUB_TerrainModProperty_setAttr
  void TerrainModProperty::setAttr(const std::string &, const Atlas::Message::Element &)
  {
    
  }
#endif //STUB_TerrainModProperty_setAttr

#ifndef STUB_TerrainModProperty_move_handler
//#define STUB_TerrainModProperty_move_handler
  HandlerResult TerrainModProperty::move_handler(LocatedEntity * e, const Operation & op, OpVector & res)
  {
    return *static_cast<HandlerResult*>(nullptr);
  }
#endif //STUB_TerrainModProperty_move_handler

#ifndef STUB_TerrainModProperty_delete_handler
//#define STUB_TerrainModProperty_delete_handler
  HandlerResult TerrainModProperty::delete_handler(LocatedEntity * e, const Operation & op, OpVector & res)
  {
    return *static_cast<HandlerResult*>(nullptr);
  }
#endif //STUB_TerrainModProperty_delete_handler


#endif