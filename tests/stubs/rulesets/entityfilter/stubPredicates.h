// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubPredicates_custom.h file.

#include "rulesets/entityfilter/Predicates.h"
#include "stubPredicates_custom.h"

#ifndef STUB_RULESETS_ENTITYFILTER_PREDICATES_H
#define STUB_RULESETS_ENTITYFILTER_PREDICATES_H

namespace EntityFilter {

#ifndef STUB_Predicate_isMatch
//#define STUB_Predicate_isMatch
  bool Predicate::isMatch(const QueryContext& context) const
  {
    return false;
  }
#endif //STUB_Predicate_isMatch


}  // namespace EntityFilter

namespace EntityFilter {

#ifndef STUB_ComparePredicate_ComparePredicate
//#define STUB_ComparePredicate_ComparePredicate
   ComparePredicate::ComparePredicate(const Consumer<QueryContext>* lhs, const Consumer<QueryContext>* rhs, Comparator comparator)
    : Predicate(lhs, rhs, comparator)
  {
    
  }
#endif //STUB_ComparePredicate_ComparePredicate

#ifndef STUB_ComparePredicate_isMatch
//#define STUB_ComparePredicate_isMatch
  bool ComparePredicate::isMatch(const QueryContext& context) const
  {
    return false;
  }
#endif //STUB_ComparePredicate_isMatch


}  // namespace EntityFilter

namespace EntityFilter {

#ifndef STUB_AndPredicate_AndPredicate
//#define STUB_AndPredicate_AndPredicate
   AndPredicate::AndPredicate(const Predicate* lhs, const Predicate* rhs)
    : Predicate(lhs, rhs)
  {
    
  }
#endif //STUB_AndPredicate_AndPredicate

#ifndef STUB_AndPredicate_isMatch
//#define STUB_AndPredicate_isMatch
  bool AndPredicate::isMatch(const QueryContext& context) const
  {
    return false;
  }
#endif //STUB_AndPredicate_isMatch


}  // namespace EntityFilter

namespace EntityFilter {

#ifndef STUB_OrPredicate_OrPredicate
//#define STUB_OrPredicate_OrPredicate
   OrPredicate::OrPredicate(const Predicate* lhs, const Predicate* rhs)
    : Predicate(lhs, rhs)
  {
    
  }
#endif //STUB_OrPredicate_OrPredicate

#ifndef STUB_OrPredicate_isMatch
//#define STUB_OrPredicate_isMatch
  bool OrPredicate::isMatch(const QueryContext& context) const
  {
    return false;
  }
#endif //STUB_OrPredicate_isMatch


}  // namespace EntityFilter

namespace EntityFilter {

#ifndef STUB_NotPredicate_NotPredicate
//#define STUB_NotPredicate_NotPredicate
   NotPredicate::NotPredicate(const Predicate* pred)
    : Predicate(pred)
  {
    
  }
#endif //STUB_NotPredicate_NotPredicate

#ifndef STUB_NotPredicate_isMatch
//#define STUB_NotPredicate_isMatch
  bool NotPredicate::isMatch(const QueryContext& context) const
  {
    return false;
  }
#endif //STUB_NotPredicate_isMatch


}  // namespace EntityFilter

#endif