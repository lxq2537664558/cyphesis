// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubBurnSpeedProperty_custom.h file.

#include "rulesets/BurnSpeedProperty.h"
#include "stubBurnSpeedProperty_custom.h"

#ifndef STUB_RULESETS_BURNSPEEDPROPERTY_H
#define STUB_RULESETS_BURNSPEEDPROPERTY_H

#ifndef STUB_BurnSpeedProperty_install
//#define STUB_BurnSpeedProperty_install
  void BurnSpeedProperty::install(LocatedEntity *, const std::string &)
  {
    
  }
#endif //STUB_BurnSpeedProperty_install

#ifndef STUB_BurnSpeedProperty_remove
//#define STUB_BurnSpeedProperty_remove
  void BurnSpeedProperty::remove(LocatedEntity *, const std::string &)
  {
    
  }
#endif //STUB_BurnSpeedProperty_remove

#ifndef STUB_BurnSpeedProperty_operation
//#define STUB_BurnSpeedProperty_operation
  HandlerResult BurnSpeedProperty::operation(LocatedEntity *, const Operation &, OpVector &)
  {
    return *static_cast<HandlerResult*>(nullptr);
  }
#endif //STUB_BurnSpeedProperty_operation

#ifndef STUB_BurnSpeedProperty_copy
//#define STUB_BurnSpeedProperty_copy
  BurnSpeedProperty* BurnSpeedProperty::copy() const
  {
    return nullptr;
  }
#endif //STUB_BurnSpeedProperty_copy

#ifndef STUB_BurnSpeedProperty_burn_handler
//#define STUB_BurnSpeedProperty_burn_handler
  HandlerResult BurnSpeedProperty::burn_handler(LocatedEntity * e, const Operation & op, OpVector & res)
  {
    return *static_cast<HandlerResult*>(nullptr);
  }
#endif //STUB_BurnSpeedProperty_burn_handler


#endif