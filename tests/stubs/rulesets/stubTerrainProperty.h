// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubTerrainProperty_custom.h file.

#include "rulesets/TerrainProperty.h"
#include "stubTerrainProperty_custom.h"

#ifndef STUB_RULESETS_TERRAINPROPERTY_H
#define STUB_RULESETS_TERRAINPROPERTY_H

#ifndef STUB_TerrainProperty_createShaders
//#define STUB_TerrainProperty_createShaders
  Mercator::TileShader* TerrainProperty::createShaders(const Atlas::Message::ListType& surfaceList)
  {
    return nullptr;
  }
#endif //STUB_TerrainProperty_createShaders

#ifndef STUB_TerrainProperty_TerrainProperty
//#define STUB_TerrainProperty_TerrainProperty
   TerrainProperty::TerrainProperty(const TerrainProperty& rhs)
    : PropertyBase(rhs)
    , m_tileShader(nullptr)
  {
    
  }
#endif //STUB_TerrainProperty_TerrainProperty

#ifndef STUB_TerrainProperty_TerrainProperty
//#define STUB_TerrainProperty_TerrainProperty
   TerrainProperty::TerrainProperty()
    : PropertyBase()
    , m_tileShader(nullptr)
  {
    
  }
#endif //STUB_TerrainProperty_TerrainProperty

#ifndef STUB_TerrainProperty_TerrainProperty_DTOR
//#define STUB_TerrainProperty_TerrainProperty_DTOR
   TerrainProperty::~TerrainProperty()
  {
    
  }
#endif //STUB_TerrainProperty_TerrainProperty_DTOR

#ifndef STUB_TerrainProperty_install
//#define STUB_TerrainProperty_install
  void TerrainProperty::install(LocatedEntity *, const std::string &)
  {
    
  }
#endif //STUB_TerrainProperty_install

#ifndef STUB_TerrainProperty_remove
//#define STUB_TerrainProperty_remove
  void TerrainProperty::remove(LocatedEntity *, const std::string &)
  {
    
  }
#endif //STUB_TerrainProperty_remove

#ifndef STUB_TerrainProperty_get
//#define STUB_TerrainProperty_get
  int TerrainProperty::get(Atlas::Message::Element &) const
  {
    return 0;
  }
#endif //STUB_TerrainProperty_get

#ifndef STUB_TerrainProperty_set
//#define STUB_TerrainProperty_set
  void TerrainProperty::set(const Atlas::Message::Element &)
  {
    
  }
#endif //STUB_TerrainProperty_set

#ifndef STUB_TerrainProperty_copy
//#define STUB_TerrainProperty_copy
  TerrainProperty* TerrainProperty::copy() const
  {
    return nullptr;
  }
#endif //STUB_TerrainProperty_copy

#ifndef STUB_TerrainProperty_operation
//#define STUB_TerrainProperty_operation
  HandlerResult TerrainProperty::operation(LocatedEntity *, const Operation &, OpVector &)
  {
    return *static_cast<HandlerResult*>(nullptr);
  }
#endif //STUB_TerrainProperty_operation

#ifndef STUB_TerrainProperty_apply
//#define STUB_TerrainProperty_apply
  void TerrainProperty::apply(LocatedEntity* entity)
  {
    
  }
#endif //STUB_TerrainProperty_apply

#ifndef STUB_TerrainProperty_addMod
//#define STUB_TerrainProperty_addMod
  void TerrainProperty::addMod(long id, const Mercator::TerrainMod *) const
  {
    
  }
#endif //STUB_TerrainProperty_addMod

#ifndef STUB_TerrainProperty_clearMods
//#define STUB_TerrainProperty_clearMods
  void TerrainProperty::clearMods(float, float)
  {
    
  }
#endif //STUB_TerrainProperty_clearMods

#ifndef STUB_TerrainProperty_updateMod
//#define STUB_TerrainProperty_updateMod
  void TerrainProperty::updateMod(long id, const Mercator::TerrainMod *) const
  {
    
  }
#endif //STUB_TerrainProperty_updateMod

#ifndef STUB_TerrainProperty_removeMod
//#define STUB_TerrainProperty_removeMod
  void TerrainProperty::removeMod(long id) const
  {
    
  }
#endif //STUB_TerrainProperty_removeMod

#ifndef STUB_TerrainProperty_getHeightAndNormal
//#define STUB_TerrainProperty_getHeightAndNormal
  bool TerrainProperty::getHeightAndNormal(float x, float y, float &, Vector3D &) const
  {
    return false;
  }
#endif //STUB_TerrainProperty_getHeightAndNormal

#ifndef STUB_TerrainProperty_getSurface
//#define STUB_TerrainProperty_getSurface
  int TerrainProperty::getSurface(const Point3D &, int &)
  {
    return 0;
  }
#endif //STUB_TerrainProperty_getSurface

#ifndef STUB_TerrainProperty_findMods
//#define STUB_TerrainProperty_findMods
  void TerrainProperty::findMods(const Point3D &, std::vector<LocatedEntity *> &)
  {
    
  }
#endif //STUB_TerrainProperty_findMods

#ifndef STUB_TerrainProperty_eat_handler
//#define STUB_TerrainProperty_eat_handler
  HandlerResult TerrainProperty::eat_handler(LocatedEntity * e, const Operation & op, OpVector & res)
  {
    return *static_cast<HandlerResult*>(nullptr);
  }
#endif //STUB_TerrainProperty_eat_handler

#ifndef STUB_TerrainProperty_getData
//#define STUB_TerrainProperty_getData
  Mercator::Terrain& TerrainProperty::getData()
  {
    return *static_cast<Mercator::Terrain*>(nullptr);
  }
#endif //STUB_TerrainProperty_getData

#ifndef STUB_TerrainProperty_getData
//#define STUB_TerrainProperty_getData
  Mercator::Terrain& TerrainProperty::getData() const
  {
    return *static_cast<Mercator::Terrain*>(nullptr);
  }
#endif //STUB_TerrainProperty_getData


#endif