// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubPersistence_custom.h file.

#include "server/Persistence.h"
#include "stubPersistence_custom.h"

#ifndef STUB_SERVER_PERSISTENCE_H
#define STUB_SERVER_PERSISTENCE_H

#ifndef STUB_Persistence_Persistence
//#define STUB_Persistence_Persistence
   Persistence::Persistence()
  {
    
  }
#endif //STUB_Persistence_Persistence

#ifndef STUB_Persistence_instance
//#define STUB_Persistence_instance
   Persistence* Persistence::instance()
  {
    return nullptr;
  }
#endif //STUB_Persistence_instance

#ifndef STUB_Persistence_init
//#define STUB_Persistence_init
  int Persistence::init()
  {
    return 0;
  }
#endif //STUB_Persistence_init

#ifndef STUB_Persistence_shutdown
//#define STUB_Persistence_shutdown
  void Persistence::shutdown()
  {
    
  }
#endif //STUB_Persistence_shutdown

#ifndef STUB_Persistence_findAccount
//#define STUB_Persistence_findAccount
  bool Persistence::findAccount(const std::string &)
  {
    return false;
  }
#endif //STUB_Persistence_findAccount

#ifndef STUB_Persistence_getAccount
//#define STUB_Persistence_getAccount
  Account* Persistence::getAccount(const std::string &)
  {
    return nullptr;
  }
#endif //STUB_Persistence_getAccount

#ifndef STUB_Persistence_putAccount
//#define STUB_Persistence_putAccount
  void Persistence::putAccount(const Account &)
  {
    
  }
#endif //STUB_Persistence_putAccount

#ifndef STUB_Persistence_registerCharacters
//#define STUB_Persistence_registerCharacters
  void Persistence::registerCharacters(Account &, const EntityDict & worldObjects)
  {
    
  }
#endif //STUB_Persistence_registerCharacters

#ifndef STUB_Persistence_addCharacter
//#define STUB_Persistence_addCharacter
  void Persistence::addCharacter(const Account &, const LocatedEntity &)
  {
    
  }
#endif //STUB_Persistence_addCharacter

#ifndef STUB_Persistence_delCharacter
//#define STUB_Persistence_delCharacter
  void Persistence::delCharacter(const std::string &)
  {
    
  }
#endif //STUB_Persistence_delCharacter

#ifndef STUB_Persistence_getRules
//#define STUB_Persistence_getRules
  int Persistence::getRules(std::map<std::string, Atlas::Objects::Root> & m)
  {
    return 0;
  }
#endif //STUB_Persistence_getRules

#ifndef STUB_Persistence_storeRule
//#define STUB_Persistence_storeRule
  int Persistence::storeRule(const Atlas::Objects::Root & rule, const std::string & key, const std::string & section)
  {
    return 0;
  }
#endif //STUB_Persistence_storeRule

#ifndef STUB_Persistence_updateRule
//#define STUB_Persistence_updateRule
  int Persistence::updateRule(const Atlas::Objects::Root & rule, const std::string & key)
  {
    return 0;
  }
#endif //STUB_Persistence_updateRule

#ifndef STUB_Persistence_clearRules
//#define STUB_Persistence_clearRules
  int Persistence::clearRules()
  {
    return 0;
  }
#endif //STUB_Persistence_clearRules

#ifndef STUB_Persistence_getCharacterAccountRelationName
//#define STUB_Persistence_getCharacterAccountRelationName
  const std::string& Persistence::getCharacterAccountRelationName() const
  {
    static std::string instance; return instance;
  }
#endif //STUB_Persistence_getCharacterAccountRelationName


#endif