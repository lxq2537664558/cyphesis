// AUTOGENERATED file, created by the tool generate_stub.py, don't edit!
// If you want to add your own functionality, instead edit the stubPossessionAuthenticator_custom.h file.

#include "server/PossessionAuthenticator.h"
#include "stubPossessionAuthenticator_custom.h"

#ifndef STUB_SERVER_POSSESSIONAUTHENTICATOR_H
#define STUB_SERVER_POSSESSIONAUTHENTICATOR_H

#ifndef STUB_PossessionAuthenticator_removePossession
//#define STUB_PossessionAuthenticator_removePossession
  void PossessionAuthenticator::removePossession(PendingPossessionsMap::iterator I)
  {
    
  }
#endif //STUB_PossessionAuthenticator_removePossession

#ifndef STUB_PossessionAuthenticator_isPending
//#define STUB_PossessionAuthenticator_isPending
  bool PossessionAuthenticator::isPending(const std::string &) const
  {
    return false;
  }
#endif //STUB_PossessionAuthenticator_isPending

#ifndef STUB_PossessionAuthenticator_addPossession
//#define STUB_PossessionAuthenticator_addPossession
  int PossessionAuthenticator::addPossession(const std::string &, const std::string &)
  {
    return 0;
  }
#endif //STUB_PossessionAuthenticator_addPossession

#ifndef STUB_PossessionAuthenticator_removePossession
//#define STUB_PossessionAuthenticator_removePossession
  int PossessionAuthenticator::removePossession(const std::string &)
  {
    return 0;
  }
#endif //STUB_PossessionAuthenticator_removePossession

#ifndef STUB_PossessionAuthenticator_getPossessionKey
//#define STUB_PossessionAuthenticator_getPossessionKey
  boost::optional<std::string> PossessionAuthenticator::getPossessionKey(const std::string& entity_id)
  {
    return *static_cast<boost::optional<std::string>*>(nullptr);
  }
#endif //STUB_PossessionAuthenticator_getPossessionKey

#ifndef STUB_PossessionAuthenticator_authenticatePossession
//#define STUB_PossessionAuthenticator_authenticatePossession
  LocatedEntity* PossessionAuthenticator::authenticatePossession(const std::string &, const std::string &)
  {
    return nullptr;
  }
#endif //STUB_PossessionAuthenticator_authenticatePossession


#endif